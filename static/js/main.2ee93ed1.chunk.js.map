{"version":3,"sources":["Components/Info.js","Components/Marker.js","Components/Map.js","Components/Graph.js","App.js","index.js"],"names":["Info","title","cases","total","Card","className","CardContent","Typography","color","gutterBottom","style","Marker","lat","lng","onClick","icon","LocationIcon","Map","eventData","center","zoom","markers","map","ev","categories","id","geometries","coordinates","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","Graph","useState","setData","useEffect","a","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","setEventData","setLoading","res","events","console","log","fetchEvents","name","iso2","featchApi","onCountryChange","e","countryCode","target","url","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","recovered","todayDeaths","deaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ee93ed1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\n\r\nfunction Info({ title, cases, total }) {\r\n    return (\r\n        <Card className=\"infoBox\">\r\n            <CardContent>\r\n                <Typography className=\"infotitle\" color=\"textSecondary\" gutterBottom>\r\n                    <h3 style={{color:\"navy\"}}><b>{title}</b></h3>\r\n                </Typography>\r\n\r\n                <h2 className=\"infoBox_cases\">{cases}</h2><br/>\r\n\r\n                <Typography className=\"infoBox_total\" color=\"textSecondary\">\r\n                <h4 style={{color:\"brown\"}}>Total = {total}</h4>\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n};\r\nexport default Info\r\n","import React from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { LocationIcon } from \"@iconify/icons-mdi/fire-alert\";\r\n\r\nconst Marker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"marker\" onClick={onClick}>\r\n            <Icon icon={LocationIcon} className=\"icon\" />\r\n        </div>\r\n    )\r\n}\r\nexport default Marker;\r\n","import React from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from './Marker';\r\n\r\nconst Map = ({ eventData, center, zoom }) => {\r\n\r\n  const markers = eventData.map(ev => {\r\n    if (ev.categories[0].id === 8) {\r\n      return <Marker lat={ev.geometries[0].coordinates[1]} lng={ev.geometries[0].coordinates[0]} />\r\n      // onClick={() => setLocationInfo({ id: ev.id, title: ev.title })} />\r\n    }\r\n    return null\r\n  })\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: '' }}   //AIzaSyC41r4-2WyE1Q7AlmyjrhE-9vpev31G0gM\r\n        defaultCenter={center}\r\n        defaultZoom={zoom}\r\n      >\r\n      {markers}\r\n      </GoogleMapReact>\r\n    </div>\r\n  )\r\n}\r\n\r\nMap.defaultProps = {\r\n  center: {\r\n    lat: 42.3265,\r\n    lng: -122.8756\r\n  },\r\n  zoom: 6\r\n}\r\nexport default Map;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from 'numeral';\r\n\r\nconst options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    format: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n    let chartData = [];\r\n    let lastDataPoint;\r\n    for (let date in data.cases) {\r\n        if (lastDataPoint) {\r\n            let newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint,\r\n            };\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction Graph({ casesType = \"cases\" }) {\r\n    const [data, setData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    let chartData = buildChartData(data, casesType);\r\n                    setData(chartData);\r\n                    // console.log(chartData);\r\n                    // buildChart(chartData);\r\n                });\r\n        };\r\n\r\n        fetchData();\r\n    }, [casesType]);\r\n\r\n    return (\r\n        <>\r\n        <br/><hr />\r\n            <h1>GRAPH</h1>\r\n            <div className=\"graph\">\r\n                {data?.length > 0 && (\r\n                    <Line\r\n                     options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                                    borderColor: \"#CC1034\",\r\n                                    data: data,\r\n                                },\r\n                            ],\r\n                        }}\r\n                       \r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Graph;\r\n","import React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from '@material-ui/core';\nimport Info from './Components/Info';\nimport Map from './Components/Map';\nimport Graph from './Components/Graph';\nimport numeral from 'numeral';\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [casesType, setCashType] = useState(\"cases\");\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true)\n      const res = await fetch(\"https://eonet.sci.gsfc.nasa.gov/api/v2.1/events\")\n      const { events } = await res.json()\n      console.log(events);\n      setEventData(events)\n      setLoading(false)\n    }\n\n    fetchEvents()\n    console.log(eventData);\n  }, []);\n\n\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data)\n      });\n  }, []);\n\n  useEffect(() => {\n    const featchApi = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          setCountries(countries);\n        });\n    };\n    featchApi();\n  }, []);\n\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        // setInputCountry(countryCode);\n        setCountryInfo(data);\n        // setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        // setMapZoom(4);\n      });\n  };\n  console.log(countryInfo)\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"covid19\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              <MenuItem value=\"worldwide\">worldwild</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        \n          <div className=\"box3\">\n            <Info className=\"box01\"\n              title=\"Corona Case\"\n              cases={countryInfo.todayCases}\n              total={countryInfo.cases} />\n\n            <Info className=\"box01\"\n              title=\"Recover case\"\n              cases={countryInfo.todayRecovered}\n              total={countryInfo.recovered} />\n\n            <Info className=\"box01\"\n              title=\"Deaths case\"\n              cases={countryInfo.todayDeaths}\n              total={countryInfo.deaths} />\n          </div>\n     \n\n        <div>\n          {<Map eventData={eventData} />}\n        </div>\n\n        {/* <Map /> */}\n\n        <div>\n          <Graph casesType={casesType} />\n        </div>\n\n      </div>\n\n    </div>\n  )\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./App.css\";\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}